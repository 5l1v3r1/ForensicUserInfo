<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>127, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolBtnOpen.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAKISURBVDhPjZJdSFMBGIali6CCbrrSiFCzCzPBHwhTsLku
        BDOsPMqcuoZu5szf47Lp5t+0FNLpmZ5ppZu/R9PZNDMJQi80zLm5mWkg6kW6dRcmFmTzbRXoGRb6wXv1
        8T28PHxubgdMUayH0Krx2VjrOo0V7dltbZZXC+Hre/Sguz/7rEgP7nKHp2O92x3sNEm86w4FaEk+Ra0P
        BMM2KsK3qRrY9KFYZ85gXuP95VAA+tbJGrtlFBuTNLYtbdh8S2NtdgRvlAGrhwLcjCLE8+15O1+t/XAs
        DmBr3gD7OIWy5HD9PwFizjlho/DKBpXEAS3gbqfHX5ypK8j4YdeT+DRYBvuQAhNNd+GfcmHEn/Q/4QIR
        hHlxGwURjjo+B+y0qrKhbq5AdYMCJY+kGPzQicqxcvjJz+uCStyP70JU8QETj9NjMFCagoVuObpIAlQS
        F01pV6G1yKExF6DWlIsqUx76PrYgx5CJkPRgehegjvPqWxpj9gljCjlQme+j2iSF0piDIqMEsncSCOnb
        WKGvYxfwP2HVylg0zMpQ62ygMt9DvTP5wxlIUCXA9uTaHuBIYL2MkmXuE+ZH5CO1MxF3enhIY3hI7YhD
        mDJ0VSoqKV3W8vh/G1zuSY0hjZvjn4EHz/RQtDKQUjo8nf4OacMajoUwOreg5j1hbP2eUc0EkT28NbTo
        QMUCIJoGkseBuGEgngGoSYCvWIBPRMWeMDZgrjzw50y/GuRzOwSjgMCwAz6zA0LnQLQGiFY70K594SqM
        DViuD7f1V+aCVzwF8WtA+MrZwAAkDQGJv1tUraCYfOgqjA1YahOHvCy7UXiJ6DAE5xjBKZ5z5j04civC
        C03wjuxdVZMpLGGuT/wLlsuwhIkY7BgAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="openFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>232, 17</value>
  </metadata>
  <metadata name="saveFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>365, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAAABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAQAEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////ABmm5QDNej8AO4Q+AJ3YqwD/1oQAVXOlAHOt5wBtsHAAdFUsAK7X/QD/p1cALVdpAIdz
        fgD/6MAAs5+iAKlIIwA0hNIAds6RAOSUdQCEmZMAWo9aAKe/2wBsmMQAoJJ1AEyb5gAyV48Ajcj2ALRv
        VQD/ymUA3ohXAFSDiQCTrMwAcYWsAK2qhgB1jH8ANK7lAPfKnABrd5IA569zAGrJeQC40OcAI5fUAERn
        mADIflkAWadnAIK/hQD9k00A/deyAEF6pwB8ptYAMYO/AP+3YQA/kd8AZbjmAJLA5wBvj54Ap559AHzQ
        nwCBseMAy3A0AGOArgCh0PsAQVuQANZ9WwDNc1IA/8WSAH2UiQCs0fIAUGmaACGg3gBwy4MAYJZhAP+0
        VgCWxfEAcqTWAKTVsQBOlt4A/8BeAHXNiQD/sF4A/aBVANN+QQBDYJYAO63mAHfOlwBrtHQAcc2OAP+6
        ZgCw1PUAVqNkAH2y5wBcpGQA/5dNAP+0XAAdp+UA/qdbALbP5AB5z5QAQ12SAG15lAAho98Acs2IAHfO
        jgDRfEEAast7ABul5AD/uF8A/7JdACWX0wCWxvMAQV2SAEJhlQBEYZUA/rBfAFmoaAB2zo8AeM6PANJ+
        QQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAPXdTaQMRAAAAAAAAADYiLVk1UW1fHw4aAAAAAAASIShsc2FSXjAQTgAAAAAAAB0xBh5P
        SgxDQQAAAAAAAAAAQg8jOhkmFAAAAAAAAAAAAABlCDxcGApddC5bBAAAAAAATEULWjggY2h1E1cWGgAA
        ABdLP29iMnZQSGopSU4AABtGPjMHZCw7VlhnBQkAAAAAckBAQEA5FUQkTS8AAAAAAABxcFQNJwg8XBgA
        AAAAAAAAAAAAAExFC1o4AAAAAAAAAAAAAAAqSz9vYjQAAAAAAAAAAAAAJTccVWArAAAAAAAAAAAAAGYC
        AgICAAAAAAAAAAAAAAAAbmtHAAAAAOB/AAAAHwAAAB8AAIA/AADAfwAA4AMAAOAAAADgAAAAwAEAAOAD
        AADwBwAA/wcAAP8DAAD/AwAA/wcAAP+PAAA=
</value>
  </data>
</root>